import { useEffect, useCallback, useMemo } from 'react'
import * as <%= name %>Actions from './<%= name %>.actions'
import { useSelector, useDispatch } from 'react-redux'
import { bindActionCreators } from 'redux'
import { createSelector } from 'reselect'
import State from '../state'

export const use<%= Name %> = () => {

  const state = useSelector(
    createSelector(
      (state: State) => state.<%= name %>,
      state => state,
    ),
  )

  const actions = useActions()
  const create<%= Name %> = useCallback(actions.create<%= Name %>, [])

  return {
    create<%= Name %>,
    state,
  }
}

const useActions = () => {
  const dispatch = useDispatch()
  const actions = useMemo(() => {
    return bindActionCreators(<%= name %>Actions, dispatch)
  }, [<%= name %>Actions, dispatch])

  return actions
}
